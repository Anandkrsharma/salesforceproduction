public without sharing class AuthClient {    Id EnviromentId;    EnviromentInformation__c objPack;    public AuthClient (ApexPages.StandardController controller) {      EnviromentId = controller.getRecord().Id;                objPack=(EnviromentInformation__c) controller.getRecord();                  }    public AuthClient (){    }    public PageReference validateOAuthBase(){        String urlAuth;        String ClientId;        String ClientSecret;        String redirect_uriBase;        String redirect_uri;        DeploymentSettingClient__c objDS = DeploymentSettingClient__c.getOrgDefaults();        String strMyState ;                /* Test Env         ClientId = '3MVG9fMtCkV6eLhckipcGtsdEsZqXGXSs976uKfivATtaFl6rhaqwmMvzgd26NEEvc3wpiPBjxaMR2s3ITjsa';        ClientSecret = '4904334507055360250';                redirect_uri='https://sfinfraws.herokuapp.com/OAuthClientServlet/callback';        */                  /*Prod Env */        ClientId = '3MVG9uudbyLbNPZMqjoyARgtu.pyINGvecuezzYBggB0tW3Xe.Vecan21msjqnkleZlkazdoq6Cltf1bhQ5DQ';        ClientSecret = '8362535774915746604';        redirect_uri='https://onforce.herokuapp.com/OAuthClientServlet/callback';                if(objPack.Auth_Type__c =='Self'){            strMyState = objPack.Auth_Type__c ;                        if(runningInASandbox()){                  urlAuth = 'https://test.salesforce.com/services/oauth2/authorize?prompt=login&response_type=code' +                        '&client_id=' + ClientId +                                             '&client_secret=' + ClientSecret +                        '&redirect_uri='+redirect_uri+                        '&state='+strMyState+'|T|'+ EnviromentId;                                               }else{                urlAuth = 'https://login.salesforce.com/services/oauth2/authorize?prompt=login&response_type=code' +                        '&client_id=' + ClientId +                                             '&client_secret=' + ClientSecret +                        '&redirect_uri='+redirect_uri+                         '&state='+strMyState+'|L|'+ EnviromentId;            }        }else{                        strMyState =EnviromentId + '|'+ objDS.BaseOrganizationId__c  +'|' + objDS.Server_URL__c +'|'+ objDS.TokenCode__c+ '|'+ objDS.RefreshTokenCode__c;            if(objPack.Type__c=='Sandbox'){                  urlAuth = 'https://test.salesforce.com/services/oauth2/authorize?prompt=login&response_type=code' +                            '&client_id=' + ClientId +                                                 '&client_secret=' + ClientSecret +                            '&redirect_uri='+redirect_uri+                             '&state='+objPack.Auth_Type__c +'|T|'+strMyState ;            }else{                urlAuth = 'https://login.salesforce.com/services/oauth2/authorize?prompt=login&response_type=code' +                            '&client_id=' + ClientId +                                                 '&client_secret=' + ClientSecret +                            '&redirect_uri='+redirect_uri+                            '&state='+objPack.Auth_Type__c +'|L|'+strMyState ;            }                  }                        PageReference objDetailPage;         objDetailPage = new PageReference(urlAuth);         objDetailPage.setRedirect(true);        return objDetailPage;               }               public static Boolean runningInASandbox() {        return [SELECT Id, IsSandbox FROM Organization where Id =: userinfo.getOrganizationId() LIMIT 1].IsSandbox;    }    }